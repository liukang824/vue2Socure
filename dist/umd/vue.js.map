{"version":3,"file":"vue.js","sources":["../../src/util/index.js","../../src/observe/array.js","../../src/observe/index.js","../../src/state.js","../../src/compiler/parser-html.js","../../src/compiler/index.js","../../src/observe/watcher.js","../../src/vdom/patch.js","../../src/lifecycle.js","../../src/init.js","../../src/vdom/create-element.js","../../src/render.js","../../src/index.js"],"sourcesContent":["export function isObject(data){\r\n  return typeof data === 'object' && data !==null\r\n}\r\nexport function  def(data,key,value){\r\n  Object.defineProperty(data,key,{\r\n    configurable:false,//能否使用delete、能否需改属性特性、或能否修改访问器属性、，false为不可重新定义，默认值为true\r\n    enumerable:false,//对象属性是否可通过for-in循环，flase为不可循环，默认值为true\r\n    value\r\n  })\r\n}\r\n\r\n export function proxy(vm,source,key){\r\n   Object.defineProperty(vm,key,{\r\n    get(){\r\n      return vm[source][key]\r\n    },\r\n    set(newVlaue){\r\n      vm[source][key] = newVlaue\r\n    }\r\n   })\r\n\r\n}","// 会对数组本身发生变化的一些方法  push shift  unshift pop reverse  sort  splice \r\n// slice() \r\n// value.__proto__ = arrayMethods  \r\n//  arrayMethods.__proto__ = oldArrayMethods\r\nlet oldArrayMethods = Array.prototype ;// 拿到数组原来的方法\r\nexport let arrayMethods = Object.create(oldArrayMethods)\r\n\r\nconst methods=[\r\n  'push',\r\n  'shift',\r\n  'unshift',\r\n  'pop',\r\n  'reverse',\r\n  'sort',\r\n  'splice'\r\n]\r\n  methods.forEach(method => {\r\n    arrayMethods[method] = function (...args) {\r\n      // aop  切片进程  装饰着模式\r\n      // oldArrayMethods 数组原型的方法  绑定this 执行 使重的方法 有效\r\n      const result =   oldArrayMethods[method].apply(this,args)  //对原型的this 绑定 调用原生的数组方法\r\n      let ob  = this.__ob__;\r\n      let inserted;  //当前用户插入的元素\r\n      switch (method) {\r\n        case 'push':\r\n        case 'unshift':\r\n          inserted = args\r\n          break;\r\n        case 'splice' :  //3个惨数 新增的属性 删除修改  功能\r\n         inserted = args.splice(2)\r\n        default:\r\n          break;\r\n      }\r\n      if(inserted) ob.observerArray(inserted) ;  //新增的属性继续观测\r\n      return result;\r\n    }\r\n  });","import {isObject,def} from '../util/index'\r\nimport {arrayMethods} from './array'\r\nclass Observer{\r\n  constructor(value){\r\n   // vue 如果数据的层次过多 需要递归的去解析对象中的属性 一次的get和set\r\n    // value.__ob__ = this   //给每一个监控过的对象新增加一个__ob__ 属性\r\n    def(value,'__ob__',this)\r\n    if(Array.isArray(value)){  //初始化工作 \r\n        // 数组并不会将对索引进行观测因为谁导致性能问题\r\n      // 如果是数组的话 并不会对索引进行观测 因为消耗过大 \r\n      // 前端开发中很少操作索引  \r\n      value.__proto__ = arrayMethods  //装饰模式 \r\n      // 如果数组中放的是对象我再去监控\r\n      this.observerArray(value)\r\n    }else{\r\n      this.walk(value)\r\n    }\r\n    \r\n  }\r\n  walk(data){\r\n    let keys = Object.keys(data)\r\n    keys.forEach(item => {\r\n      defineReactive(data,item,data[item])  //定义响应式数据\r\n    });\r\n  }\r\n  observerArray(value){\r\n    value.forEach(item => {\r\n        observe(item)\r\n    });\r\n  }\r\n}\r\nfunction defineReactive(data,key,value){\r\n  observe(value)\r\n    Object.defineProperty(data,key,{\r\n      get(){\r\n        return value\r\n      },\r\n      set(newValue){\r\n        if(newValue===value)return;\r\n        //  监控的值是一个对象的话 再次监控observe(value)\r\n            observe(value)\r\n            value = newValue\r\n        }\r\n    })\r\n}\r\nexport function observe(data){\r\n  // 判断是不是object \r\n  let isobj = isObject (data)\r\n  if(!isobj)return;\r\n  return new Observer(data)\r\n}","import {observe} from './observe/index'\r\nimport { proxy} from './util/index'\r\nexport function initState(vm) {\r\n  const opts = vm.$options\r\n// vue 的数据来源 属性  方法  数据  计算属性  watch\r\n    if(opts.props){\r\n      initProps(vm)\r\n    }  \r\n    if(opts.methods){\r\n      initMethod(vm)\r\n    }\r\n    if(opts.data){\r\n        initDta(vm)\r\n    }\r\n    if(opts.computed){\r\n      initComputed(vm)\r\n    }\r\n    if(opts.watch){\r\n      initWatch(vm)\r\n    }\r\n  }\r\n\r\n  function initProps(){}\r\n  function initMethod(){}\r\n  function initDta(vm){\r\n      // 初始化数据\r\n    let data = vm.$options.data\r\n    data = vm._data = typeof data ===\"function\"?data.call(vm):data\r\n    // 对象劫持  用户改变了数据 我希望可以通知到 刷新页面 \r\n    // mvvm  收据变化可以驱动视图变化  \r\n    // Object.defineProperty  ()   给属性增加get 方法 set  方法 \r\n    // 对象劫持 用户改变了数据 我希望可以得到通知 =》 刷新页面\r\n    // 为了让用户更好的使用 我希望可以直接vm.xxx\r\n    // 做一个取值代理\r\n    for(let key in data){\r\n      // console.log(key,data);\r\n      proxy(vm,'_data',key )\r\n    }\r\n\r\n    observe(data)\r\n  }\r\n  function initComputed(){}\r\n  function initWatch(){}","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // abc-aaa\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; // <aaa:asdads>\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的\r\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的 >  <div>\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\n\r\n\r\nlet root = null; //ast 语法树的根\r\nlet currentParent; //识别当前父亲是谁\r\nlet stack = [];\r\nconst ELEMENT_TYPE = 1;\r\nconst TEXT_TYPE = 3;\r\n\r\nfunction createASTElement(tagName, attrs) {\r\n  return {\r\n    tag: tagName,\r\n    type: ELEMENT_TYPE,\r\n    children: [],\r\n    attrs,\r\n    parent: null\r\n  }\r\n}\r\n\r\n// 开始标签\r\nfunction start(tagName, attrs) {\r\n  let element = createASTElement(tagName, attrs)\r\n  if (!root) {\r\n    root = element;\r\n  }\r\n  // 把当前元素标记成父ast\r\n  currentParent = element;\r\n  stack.push(element)  //把标签存放在栈里\r\n}\r\nfunction end(tagName) {\r\n  let element = stack.pop() //拿到的是ast对象\r\n  //我要表示当前这个p属于这个div 的儿子\r\n  currentParent = stack[stack.length - 1]\r\n  if (currentParent) {\r\n    element.parent = currentParent\r\n    currentParent.children.push(element)  //实现了一个树的父子关系\r\n  }\r\n\r\n}\r\nfunction chars(text) {\r\n  text = text.replace(/\\s/g, '')  //去掉所有空字符串\r\n  if (text) {\r\n    currentParent.children.push({\r\n      text,\r\n      type: TEXT_TYPE\r\n    })\r\n  }\r\n}\r\n\r\nexport function parseHTML(html) {\r\n  // 不停的去截取html字符串\r\n  while (html) {\r\n    let textEnd = html.indexOf('<')\r\n    if (textEnd == 0) {\r\n      // 当前索引为0 肯定是一个开始标签 \r\n      let startTagMatch = parseStartTag()   // 通过这个方法获取匹配的结果 tagname attrs\r\n      if (startTagMatch) {\r\n        start(startTagMatch.tagName, startTagMatch.attrs)\r\n        continue; // 如果开始标签匹配完毕后 继续下一次 匹配\r\n      }\r\n      let endTagMatch = html.match(endTag);\r\n      if (endTagMatch) {\r\n        advance(endTagMatch[0].length);  //删除结束标签\r\n        end(endTagMatch[1])\r\n        continue;\r\n      }\r\n    }\r\n    let text;\r\n    if (textEnd >= 0) {\r\n      text = html.substring(0, textEnd)\r\n    }\r\n    if (text) {\r\n      advance(text.length)  //删除文本属性\r\n      chars(text)\r\n    }\r\n  }\r\n\r\n  // 删除标签 \r\n  function advance(n) {\r\n    html = html.substring(n);\r\n\r\n  }\r\n  // 通过这个方法获取到匹配的结果 tagName,attrs\r\n  function parseStartTag() {\r\n    let start = html.match(startTagOpen)\r\n    if (start) {\r\n      const match = {\r\n        tagName: start[1],\r\n        attrs: []\r\n      }\r\n      advance(start[0].length)  //删除已经匹配的标签\r\n      let end, attr;  //匹配结束标签  匹配属性\r\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n        // 将属性解析 \r\n        advance(attr[0].length)  // 删除属性 \r\n        match.attrs.push({\r\n          name: attr[1],\r\n          value: attr[3] || attr[4] || attr[5]\r\n        })\r\n      }\r\n      if (end) {\r\n        advance(end[0].length)\r\n        return match;\r\n      }\r\n\r\n\r\n    }\r\n\r\n  }\r\n\r\n  return root;\r\n}\r\n","import {parseHTML} from './parser-html'\r\n// ast 语法树 是用对象来描述js语法的  虚拟dom 用对象来描dom述节点的 \r\n// argumens[0] = 匹配到的标签  arguments[1] 匹配到的标签名字\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\nexport function compileToFunction(template){\r\nconsole.log(template);\r\n  // 1 解析字符串将HTML 字符串 => ast  语法\r\n  let root  = parseHTML(template) \r\n  // 需要将ast 语法树生成最终的render函数  就是字符串拼接（模板引擎）\r\n  let code = generate(root)\r\n\r\n  // 核心思路就是将模板转化成 下面这段字符串\r\n    //  <div id=\"app\"><p>hello {{name}}</p> hello</div>\r\n    // 将ast树 再次转化成js的语法\r\n    //  _c(\"div\",{id:app},_c(\"p\",undefined,_v('hello' + _s(name) )),_v('hello')) \r\n    // 所有的模板引擎实现 都需要new Function + with\r\n\r\n    let renderFn = new Function(`with(this){ return ${code}}`); \r\n  // return function render(){\r\n\r\n  // }\r\n    return renderFn;\r\n}\r\n\r\n// generate[{name:'id',value:'app'},{}]  {id:app,a:1,b:2}\r\nfunction generate(el) {\r\n  let children = genChildren(el)  //生成子模板 \r\n  let code = `_c(\"${el.tag}\",${el.attrs.length?genProps(el.attrs):'undefined'}${children?`,${children}` :''})`\r\n  return code;\r\n}\r\n\r\n\r\nfunction genChildren(el){\r\n  let children = el.children \r\n  if(children && children.length >0){\r\n    return `${children.map(c=>gen(c)).join(',')}`\r\n  }else{\r\n    return false\r\n  }\r\n}\r\nfunction gen(node){\r\n  if(node.type==1){\r\n      return generate(node)\r\n  }else {\r\n    let text = node.text\r\n    let tokens = [];\r\n    let match, index;\r\n    // 每次的偏移量 buffer.split()\r\n    let lastIndex  = defaultTagRE.lastIndex = 0 // 只要是全局匹配 就需要将lastIndex每次匹配的时候调到0处\r\n    while (match = defaultTagRE.exec(text)) {\r\n          index = match.index\r\n          if(index > lastIndex){\r\n            tokens.push(JSON.stringify(text.slice(lastIndex,index)))\r\n          }\r\n            tokens.push(`_s(${match[1].trim()})`)\r\n            lastIndex = index+match[0].length\r\n\r\n    }\r\n    if(index < lastIndex){\r\n      tokens.push(JSON.stringify(text.split(lastIndex)))\r\n    }\r\n\r\n    return `_v(${tokens.join('+')})`;\r\n\r\n\r\n  }\r\n}\r\nfunction genProps(attrs){\r\n// 处理属性 拼接成属性的字符串\r\n  let str = ''\r\n  for (let i = 0; i < attrs.length; i++) {\r\n    let attr = attrs[i]\r\n    if(attr.name == 'style'){\r\n         // style=\"color: red;fontSize:14px\" => {style:{color:'red'},id:name,}\r\n      let obj = {}\r\n       attr.value.split(';').forEach(item=>{\r\n                let [key,value] = item.split(':');\r\n                obj[key] = value\r\n            });\r\n    }\r\n    str+=`${attr.name}:${JSON.stringify(attr.value)},`\r\n\r\n    \r\n    \r\n  }\r\n  return `{${str.slice(0,-1)}}`;\r\n\r\n}\r\n// ast语法树 是用对象来描述原生语法的   虚拟dom 用对象来描述dom节点的\r\n// ?: 匹配不捕获\r\n// argumens[0] = 匹配到的标签  arguments[1] 匹配到的标签名字\r\n\r\n\r\n//   hellpo\r\n//      <p></p>\r\n// </div>\r\n\r\n\r\n// let root = {\r\n//     tag:'div',\r\n//     attrs:[{name:'id',value:'app'}],\r\n//     parent:null,\r\n//     type:1,\r\n//     children:[{\r\n//         tag:'p',\r\n//         attrs:[],\r\n//         parent:root,\r\n//         type:1,\r\n//         children:[\r\n//             {\r\n//                 text:'hello',\r\n//                 type:3\r\n//             }\r\n//         ]\r\n//     }]\r\n// }","class Watcher {\r\n  constructor(vm,exprOrFn,callback,options){\r\n    this.vm = vm \r\n    this.callback = callback  \r\n    this.options = options \r\n    this.getter = exprOrFn\r\n    this.get()\r\n  }\r\n  get(){\r\n    this.getter()\r\n  }\r\n}\r\n\r\nexport default Watcher","export function patch(oldVnode,vnode){\r\n  // 1 判断是否是初次渲染\r\n  const  isRealElement = oldVnode.nodeType\r\n  if(isRealElement){\r\n    const oldElm = oldVnode  // id=app\r\n    const parentElm = oldElm.parentNode; // body\r\n    let el = createElm(vnode)\r\n    parentElm.insertBefore(el,oldElm.nextSibling)\r\n    parentElm.removeChild(oldElm);\r\n  }\r\n  // 递归创建真实节点  替换掉老节点\r\n\r\n}\r\nfunction createElm(vnode){// 根据虚拟节点创建真是的节点 \r\n  let {tag,data,key,children,text} = vnode\r\n  if(typeof tag === 'string'){\r\n    vnode.el = document.createElement(tag)\r\n    updateProperties(vnode);\r\n    children.forEach(child=>{\r\n      // / 递归创建儿子节点，将儿子节点扔到父节点中\r\n      return vnode.el.appendChild(createElm(child))\r\n    })\r\n\r\n  }else{\r\n    // 虚拟dom上映射真实dom  方便后续更新\r\n    vnode.el = document.createTextNode(text)\r\n  }\r\n    // 如果不是标签就是文本\r\n  return vnode.el;\r\n\r\n}\r\n\r\nfunction updateProperties(vnode){\r\n    let newProps = vnode.data\r\n    let el = vnode.el\r\n    for(let key in newProps){\r\n      if(key === 'style'){\r\n        for(let styleName  in newProps.style){\r\n          el.style[styleName] = newProps.style[styleName]\r\n        }\r\n      }else if(key ===\"class\"){\r\n        el.className = newProps.class;\r\n      }else{\r\n        el.setAttribute(key,newProps[key])\r\n      }\r\n    }\r\n  \r\n}","import Watcher from './observe/watcher.js'\r\nimport {patch}  from './vdom/patch'\r\n// \r\nexport function lifecycleMixin(Vue){\r\n  Vue.prototype._updata = function (vnode) {\r\n      // 创建真是的dom 节点\r\n      const vm = this\r\n      // console.log(vm,vnode);\r\n      vm.$el = patch(vm.$el,vnode)\r\n  }\r\n\r\n}\r\nexport function mountComponent(vm,el){\r\n  const options = vm.options\r\n  vm.$el = el  // 真是的dom元素\r\n\r\n\r\n  // Watcher 就是来渲染的\r\n  // vm._render 通过解析render方法 渲染出虚拟dom _c_v_s \r\n  // vm._update 通过虚拟dom 创建真是的dom\r\n  \r\n  // 渲染页面\r\n  let  updataComponent = () =>{  //无论渲染还是更新都会执行此方法\r\n      // 返回的是虚拟dom\r\n      vm._updata(vm._render())\r\n  }\r\n\r\n  // 渲染 Watcher  没一个组件都有一个Watcher  \r\n  new Watcher(vm,updataComponent,()=>{},true)   //true  表示是一个渲染过程 \r\n\r\n}","\r\nimport { initState } from './state'\r\nimport { compileToFunction } from './compiler/index.js'\r\nimport { mountComponent } from './lifecycle.js'\r\nexport function initMixin(Vue) {\r\n  Vue.prototype._init = function (options) {\r\n    // 数据劫持 \r\n    const vm = this  // vue 中使用this.$options 指代表就是用传递的属性\r\n    vm.$options = options\r\n    //  初始化状态\r\n    initState(vm)  //分割代码\r\n\r\n\r\n    // 如果有用户传入了el 属性 需要将页面渲染出来\r\n    // 如果用户传入了el 就要实现挂在流程\r\n    if (vm.$options.el) {\r\n      vm.$mount(vm.$options.el);\r\n    }\r\n  }\r\n  Vue.prototype.$mount = function (el) {\r\n    //1 保存this\r\n    const vm = this\r\n    const options = vm.$options\r\n    el = document.querySelector(el)\r\n\r\n\r\n    //  默认会先查找有没有render 方法 再去查找有没有 template  最后查找 el  \r\n    if (!options.render) {\r\n      let template = options.template\r\n      if (!template && el) {\r\n        template = el.outerHTML;\r\n      }\r\n      const render = compileToFunction(template);\r\n      //我们需要将template转成render 方法 2.0  虚拟dom\r\n      // 把render  方法放到options\r\n      options.render = render\r\n      // console.log(template);\r\n     \r\n    \r\n    }\r\n     // 挂在当前组件 \r\n    mountComponent(vm,el)\r\n  }\r\n} ","export function createElement(tag,data={},...children){\r\n    let key = data.key\r\n    if(key){\r\n      delete data.key\r\n    }\r\n    return vnode(tag,data,key,children,undefined)\r\n} \r\nexport function  createTextNode(text){\r\n    return vnode(undefined,undefined,undefined,undefined,text)\r\n}\r\nfunction vnode(tag, data, key, children, text) {\r\n\r\n  return {\r\n      tag,\r\n      data,\r\n      key,\r\n      children,\r\n      text\r\n  }\r\n}\r\n// 虚拟节点 就是通过_c _v 实现用对象来描述dom的操作 （对象）\r\n\r\n// 1) 将template转换成ast语法树-> 生成render方法 -> 生成虚拟dom -> 真实的dom\r\n//  重新生成虚拟dom -> 更新dom","import {createElement,createTextNode} from './vdom/create-element'\r\n\r\nexport function renderMixin(Vue){\r\n\r\n  // 创建redner 函数 \r\n  Vue.prototype._c = function (){\r\n    return createElement(...arguments)  //tag data children1 children2\r\n  }\r\n  Vue.prototype._v = function (text){\r\n    return createTextNode(text)\r\n  }\r\n  Vue.prototype._s = function (val){\r\n    return val  == null ? '':(typeof val  === 'object' ?JSON.stringify(val) : val);\r\n\r\n  }\r\n  Vue.prototype._render = function (){\r\n     // console.log(111);\r\n      // _c 创建元素节点\r\n      // _v 创建文本的虚拟节点\r\n      // _s JSON.stringfy\r\n    const vm = this\r\n    const {render} = vm.$options\r\n    let vnode = render.call(vm)  //去实例上取值\r\n    console.log(vnode);\r\n    return vnode;\r\n  }\r\n\r\n}","// Vue的核心代码 只是Vue的一个声明\r\nimport {initMixin} from './init';\r\nimport {renderMixin} from './render';\r\nimport {lifecycleMixin} from './lifecycle';\r\n\r\nfunction Vue(options){\r\n    // 进行Vue的初始化操作\r\n    this._init(options); \r\n}\r\n// 通过引入文件的方式 给Vue原型上添加方法\r\n\r\ninitMixin(Vue); // 给Vue原型上添加一个_init方法\r\nrenderMixin(Vue);\r\nlifecycleMixin(Vue);\r\nexport default Vue\r\n"],"names":["isObject","data","def","key","value","Object","defineProperty","configurable","enumerable","proxy","vm","source","get","set","newVlaue","oldArrayMethods","Array","prototype","arrayMethods","create","methods","forEach","method","args","result","apply","ob","__ob__","inserted","splice","observerArray","Observer","isArray","__proto__","walk","keys","item","defineReactive","observe","newValue","isobj","initState","opts","$options","props","initDta","computed","watch","_data","call","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","root","currentParent","stack","ELEMENT_TYPE","TEXT_TYPE","createASTElement","tagName","attrs","tag","type","children","parent","start","element","push","end","pop","length","chars","text","replace","parseHTML","html","textEnd","indexOf","startTagMatch","parseStartTag","endTagMatch","match","advance","substring","n","attr","name","defaultTagRE","compileToFunction","template","console","log","code","generate","renderFn","Function","el","genChildren","genProps","map","c","gen","join","node","tokens","index","lastIndex","exec","JSON","stringify","slice","trim","split","str","i","Watcher","exprOrFn","callback","options","getter","patch","oldVnode","vnode","isRealElement","nodeType","oldElm","parentElm","parentNode","createElm","insertBefore","nextSibling","removeChild","document","createElement","updateProperties","child","appendChild","createTextNode","newProps","styleName","style","className","setAttribute","lifecycleMixin","Vue","_updata","$el","mountComponent","updataComponent","_render","initMixin","_init","$mount","querySelector","render","outerHTML","undefined","renderMixin","_c","arguments","_v","_s","val"],"mappings":"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"}