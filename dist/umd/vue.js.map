{"version":3,"file":"vue.js","sources":["../../src/util/index.js","../../src/observe/array.js","../../src/observe/index.js","../../src/state.js","../../src/init.js","../../src/index.js"],"sourcesContent":["export function isObject(data){\r\n  return typeof data === 'object' && data !==null\r\n}\r\nexport function  def(data,key,value){\r\n  Object.defineProperty(data,key,{\r\n    configurable:false,//能否使用delete、能否需改属性特性、或能否修改访问器属性、，false为不可重新定义，默认值为true\r\n    enumerable:false,//对象属性是否可通过for-in循环，flase为不可循环，默认值为true\r\n    value\r\n  })\r\n}","// 会对数组本身发生变化的一些方法  push shift  unshift pop reverse  sort  splice \r\n// slice() \r\n// value.__proto__ = arrayMethods  \r\n//  arrayMethods.__proto__ = oldArrayMethods\r\nlet oldArrayMethods = Array.prototype ;// 拿到数组原来的方法\r\nexport let arrayMethods = Object.create(oldArrayMethods)\r\n\r\nconst methods=[\r\n  'push',\r\n  'shift',\r\n  'unshift',\r\n  'pop',\r\n  'reverse',\r\n  'sort',\r\n  'splice'\r\n]\r\n  methods.forEach(method => {\r\n    arrayMethods[method] = function (...args) {\r\n      // aop  切片进程  装饰着模式\r\n      // oldArrayMethods 数组原型的方法  绑定this 执行 使重的方法 有效\r\n      const result =   oldArrayMethods[method].apply(this,args)  //对原型的this 绑定 调用原生的数组方法\r\n      let ob  = this.__ob__;\r\n      let inserted;  //当前用户插入的元素\r\n      switch (method) {\r\n        case 'push':\r\n        case 'unshift':\r\n          inserted = args\r\n          break;\r\n        case 'splice' :  //3个惨数 新增的属性 删除修改  功能\r\n         inserted = args.splice(2)\r\n        default:\r\n          break;\r\n      }\r\n      if(inserted) ob.observerArray(inserted) ;  //新增的属性继续观测\r\n      return result;\r\n    }\r\n  });","import {isObject,def} from '../util/index'\r\nimport {arrayMethods} from './array'\r\nclass Observer{\r\n  constructor(value){\r\n   // vue 如果数据的层次过多 需要递归的去解析对象中的属性 一次的get和set\r\n    // value.__ob__ = this   //给每一个监控过的对象新增加一个__ob__ 属性\r\n    def(value,'__ob__',this)\r\n    if(Array.isArray(value)){  //初始化工作 \r\n        // 数组并不会将对索引进行观测因为谁导致性能问题\r\n      // 如果是数组的话 并不会对索引进行观测 因为消耗过大 \r\n      // 前端开发中很少操作索引  \r\n      value.__proto__ = arrayMethods  //装饰模式 \r\n      // 如果数组中放的是对象我再去监控\r\n      this.observerArray(value)\r\n    }else{\r\n      this.walk(value)\r\n    }\r\n    \r\n  }\r\n  walk(data){\r\n    let keys = Object.keys(data)\r\n    keys.forEach(item => {\r\n      defineReactive(data,item,data[item])  //定义响应式数据\r\n    });\r\n  }\r\n  observerArray(value){\r\n    value.forEach(item => {\r\n        observe(item)\r\n    });\r\n  }\r\n}\r\nfunction defineReactive(data,key,value){\r\n  observe(value)\r\n    Object.defineProperty(data,key,{\r\n      get(){\r\n        return value\r\n      },\r\n      set(newValue){\r\n        if(newValue===value)return;\r\n        //  监控的值是一个对象的话 再次监控observe(value)\r\n            observe(value)\r\n            value = newValue\r\n        }\r\n    })\r\n}\r\nexport function observe(data){\r\n  // 判断是不是object \r\n  let isobj = isObject (data)\r\n  if(!isobj)return;\r\n  return new Observer(data)\r\n}","import {observe} from './observe/index'\r\nexport function initState(vm) {\r\n  const opts = vm.$options\r\n// vue 的数据来源 属性  方法  数据  计算属性  watch\r\n    if(opts.props){\r\n      initProps(vm)\r\n    }  \r\n    if(opts.methods){\r\n      initMethod(vm)\r\n    }\r\n    if(opts.data){\r\n        initDta(vm)\r\n    }\r\n    if(opts.computed){\r\n      initComputed(vm)\r\n    }\r\n    if(opts.watch){\r\n      initWatch(vm)\r\n    }\r\n  }\r\n\r\n  function initProps(){}\r\n  function initMethod(){}\r\n  function initDta(vm){\r\n      // 初始化数据\r\n    let data = vm.$options.data\r\n    data = vm._data = typeof data ===\"function\"?data.call(vm):data\r\n    // 对象劫持  用户改变了数据 我希望可以通知到 刷新页面 \r\n    // mvvm  收据变化可以驱动视图变化  \r\n    // Object.defineProperty  ()   给属性增加get 方法 set  方法 \r\n    observe(data)\r\n  }\r\n  function initComputed(){}\r\n  function initWatch(){}","\r\nimport {initState} from './state'\r\nexport function initMixin(Vue) {\r\n  Vue.prototype._init = function(options){\r\n    // 数据劫持 \r\n    const vm = this  // vue 中使用this.$options 指代表就是用传递的属性\r\n    vm.$options = options \r\n    //  初始化状态\r\n    initState(vm)  //分割代码\r\n  }\r\n} ","import {initMixin} from './init'\r\n\r\nfunction  Vue(options) {\r\n  // 初始化\r\n    this._init(options)\r\n}\r\ninitMixin(Vue)\r\n\r\n\r\nexport default Vue"],"names":["isObject","data","def","key","value","Object","defineProperty","configurable","enumerable","oldArrayMethods","Array","prototype","arrayMethods","create","methods","forEach","method","args","result","apply","ob","__ob__","inserted","splice","observerArray","Observer","isArray","__proto__","walk","keys","item","defineReactive","observe","get","set","newValue","isobj","initState","vm","opts","$options","props","initDta","computed","watch","_data","call","initMixin","Vue","_init","options"],"mappings":"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"}